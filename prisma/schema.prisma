// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @map("user_id") @db.Char(26)
  username String  @map("username") @unique(map: "username_UNIQUE") @db.VarChar(255)
  password String  @map("password") @db.VarChar(255)
  phone    String  @map("phone_number") @unique(map: "phone_UNIQUE") @db.VarChar(20)
  email    String  @map("email") @unique(map: "email_UNIQUE") @db.VarChar(255)
  realname String  @map("realname") @db.VarChar(20)

  @@map("users")
}

model Product {
  id         String  @id @map("product_id") @db.Char(26)
  name       String  @map("name") @db.VarChar(255)
  price      Int     @map("price") @db.Int
  
  categories ProductCategory[] @relation("ProductCategories")

  @@map("products")
}

model ProductCategory {
  id          String   @id @map("category_id") @db.Char(26)
  productId   String   @map("product_id") @db.Char(26)
  name        String   @map("name") @db.VarChar(255)
  description String?  @map("description") @db.VarChar(255)

  product     Product @relation("ProductCategories", fields: [productId], references: [id], onDelete: Cascade)
  

  @@map("product_categories")
}

model Customer {
  id        String  @id @map("customer_id") @db.Char(26)
  name      String  @map("name") @db.VarChar(255)
  email     String  @map("email") @db.VarChar(255) @unique(map: "email_UNIQUE")

  addresses CustomerAddress[] @relation("CustomerAddresses")

  @@map("customers")
}

model CustomerAddress {
  id         String  @id @map("address_id") @db.Char(26)
  customerId String  @map("customer_id") @db.Char(26)
  address    String  @map("address") @db.VarChar(255)

  customer   Customer  @relation("CustomerAddresses", fields: [customerId], references: [id], onDelete: Cascade)

  @@map("customer_addresses")
}